name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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
          
          certificate-password: 111111
          
          provisioning-profile-base64: 


          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/bavo.ipa"
          APPLE_ID: "brauunnn@outlook.com"
          APP_SPECIFIC_PASSWORD: "uwfz-bgqn-tsnt-ajgv"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
